services:
  db:
    container_name: db
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    container_name: web
    build: .
    command: bash -c "python university/manage.py migrate --noinput && python university/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    container_name: redis
    image: redis
    ports:
        - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  celery:
    container_name: celery
    build: .
    command: celery "--workdir=./university" -A university worker -l INFO
    volumes:
      - .:/code
    depends_on:
      - db
      - redis

  flower:
    container_name: flower
    build: .
    command: celery "--workdir=./university" -A university flower --port:5555
    ports:
      - 5555:5555
    depends_on:
      - db
      - redis
      - celery
